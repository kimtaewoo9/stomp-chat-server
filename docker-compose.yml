version: '3.8'

services:
  # 3. 프론트엔드 애플리케이션 서비스
  myfront: # 서비스 이름
    build:
      context: ./chat-front  # 프론트엔드 프로젝트 디렉토리 경로 수정
      dockerfile: Dockerfile
    container_name: mychat-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./chat-front:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - VUE_APP_API_BASE_URL=http://localhost:8080
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - myapp
    networks:
      - chat-app-network

  # 2. 백엔드 애플리케이션 서비스
  myapp:
    build:
      context: ./chatserver
      dockerfile: Dockerfile
    container_name: mychat-app
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=mydb
      - PGPORT=5432
      - PGDATABASE=chatdb
      - PGUSER=chatuser
      - PGPASSWORD=chatpass
      - JWT_SECRET_KEY=Y2hhdHNlcnZlcnNlY3JldGFjY2Vzc3Rva2VuY2hhdHNlcnZlcnNlY3JldGFjY2Vzc3Rva2VuY2hhdHNlcnZlcnNlY3JldGFjY2Vzc3Rva2Vu
    depends_on:
      mydb:
        condition: service_healthy
    networks:
      - chat-app-network

  # 3. 데이터베이스 서비스
  mydb:
    image: postgres:14-alpine
    container_name: my-chat-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=chatdb
      - POSTGRES_USER=chatuser
      - POSTGRES_PASSWORD=chatpass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatuser -d chatdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - chat-app-network

networks:
  chat-app-network:
    driver: bridge